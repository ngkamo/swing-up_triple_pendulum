function dz = three_dof_arm_cart_dyn_for_ODE(t,z,u,l1,l2,l3,m1,m2,m3,M,g)
    load('motion_equations.mat','fx');
	z1 = z(1);
	z2 = z(2);
	z3 = z(3);
	z4 = z(4);
	z5 = z(5);
	z6 = z(6);
	z7 = z(7);
	z8 = z(8);

	u1 = u(1);

	% These equations are derived from the file Symb_Development_3DOF
	dz1 = z2;
	dz2 = -(144*m2^2*u1*cos(2*z3 - 2*z5) - 144*m3^2*u1 - 240*m2^2*u1 + 144*m3^2*u1*cos(2*z3 - 2*z5) - 128*m1*m2*u1 - 240*m1*m3*u1 - 600*m2*m3*u1 - 48*g*m2^3*sin(2*z3) + 360*m2*m3*u1*cos(2*z3 - 2*z5) - 72*m2*m3*u1*cos(2*z3 - 2*z7) + 144*m1*m3*u1*cos(2*z5 - 2*z7) + 216*m2*m3*u1*cos(2*z5 - 2*z7) - 120*g*m1*m2^2*sin(2*z3) - 48*g*m1^2*m2*sin(2*z3) - 72*g*m1*m3^2*sin(2*z3) - 90*g*m1^2*m3*sin(2*z3) + 24*g*m1*m2^2*sin(2*z5) - 48*g*m2*m3^2*sin(2*z3) - 150*g*m2^2*m3*sin(2*z3) + 24*g*m1*m3^2*sin(2*z5) + 96*l1*m2^3*z4^2*sin(z3) + 24*l2*m2^3*z6^2*sin(z5) + 27*g*m1^2*m3*sin(2*z3 - 2*z5 + 2*z7) + 27*g*m1^2*m3*sin(2*z3 + 2*z5 - 2*z7) + 27*g*m2^2*m3*sin(2*z3 - 2*z5 + 2*z7) + 27*g*m2^2*m3*sin(2*z3 + 2*z5 - 2*z7) + 24*l2*m2^3*z6^2*sin(2*z3 - z5) + 24*l1*m1*m2^2*z4^2*sin(z3 - 2*z5) + 24*l1*m1*m3^2*z4^2*sin(z3 - 2*z5) + 18*l2*m2^2*m3*z6^2*sin(z5 - 2*z7) - 300*g*m1*m2*m3*sin(2*z3) + 60*g*m1*m2*m3*sin(2*z5) - 12*g*m1*m2*m3*sin(2*z7) + 48*l2*m1*m2^2*z6^2*sin(2*z3 - z5) + 72*l2*m1*m3^2*z6^2*sin(2*z3 - z5) + 48*l2*m2*m3^2*z6^2*sin(2*z3 - z5) + 90*l2*m2^2*m3*z6^2*sin(2*z3 - z5) + 18*l3*m1*m3^2*z8^2*sin(2*z3 - z7) + 6*l3*m2*m3^2*z8^2*sin(2*z3 - z7) - 12*l3*m2^2*m3*z8^2*sin(2*z3 - z7) + 6*l3*m1*m3^2*z8^2*sin(2*z5 - z7) + 18*l3*m2*m3^2*z8^2*sin(2*z5 - z7) + 36*l3*m2^2*m3*z8^2*sin(2*z5 - z7) + 54*g*m1*m2*m3*sin(2*z3 - 2*z5 + 2*z7) + 54*g*m1*m2*m3*sin(2*z3 + 2*z5 - 2*z7) + 200*l1*m1*m2^2*z4^2*sin(z3) + 64*l1*m1^2*m2*z4^2*sin(z3) + 120*l1*m1*m3^2*z4^2*sin(z3) + 120*l1*m1^2*m3*z4^2*sin(z3) + 96*l1*m2*m3^2*z4^2*sin(z3) + 300*l1*m2^2*m3*z4^2*sin(z3) + 16*l2*m1*m2^2*z6^2*sin(z5) + 24*l2*m1*m3^2*z6^2*sin(z5) + 48*l2*m2*m3^2*z6^2*sin(z5) + 90*l2*m2^2*m3*z6^2*sin(z5) + 6*l3*m1*m3^2*z8^2*sin(z7) + 6*l3*m2*m3^2*z8^2*sin(z7) - 12*l3*m2^2*m3*z8^2*sin(z7) - 36*l1*m1^2*m3*z4^2*sin(z3 - 2*z5 + 2*z7) - 36*l1*m1^2*m3*z4^2*sin(z3 + 2*z5 - 2*z7) - 54*l1*m2^2*m3*z4^2*sin(z3 - 2*z5 + 2*z7) - 54*l1*m2^2*m3*z4^2*sin(z3 + 2*z5 - 2*z7) - 18*l2*m2^2*m3*z6^2*sin(2*z3 + z5 - 2*z7) + 18*l3*m1*m3^2*z8^2*sin(2*z3 - 2*z5 + z7) + 18*l3*m2*m3^2*z8^2*sin(2*z3 - 2*z5 + z7) + 36*l3*m2^2*m3*z8^2*sin(2*z3 - 2*z5 + z7) + 60*l1*m1*m2*m3*z4^2*sin(z3 - 2*z5) - 12*l1*m1*m2*m3*z4^2*sin(z3 - 2*z7) + 6*l2*m1*m2*m3*z6^2*sin(z5 - 2*z7) + 150*l2*m1*m2*m3*z6^2*sin(2*z3 - z5) + 12*l3*m1*m2*m3*z8^2*sin(2*z3 - z7) + 12*l3*m1*m2*m3*z8^2*sin(2*z5 - z7) + 500*l1*m1*m2*m3*z4^2*sin(z3) + 50*l2*m1*m2*m3*z6^2*sin(z5) + 4*l3*m1*m2*m3*z8^2*sin(z7) - 90*l1*m1*m2*m3*z4^2*sin(z3 - 2*z5 + 2*z7) - 90*l1*m1*m2*m3*z4^2*sin(z3 + 2*z5 - 2*z7) - 18*l2*m1*m2*m3*z6^2*sin(2*z3 + z5 - 2*z7) + 36*l3*m1*m2*m3*z8^2*sin(2*z3 - 2*z5 + z7))/(240*M*m2^2 - 48*m2^3*cos(2*z3) + 144*M*m3^2 + 200*m1*m2^2 + 80*m1^2*m2 + 120*m1*m3^2 + 150*m1^2*m3 + 48*m2*m3^2 + 150*m2^2*m3 + 48*m2^3 - 72*m1*m2^2*cos(2*z3 - 2*z5) - 72*m1*m3^2*cos(2*z3 - 2*z5) - 90*m1^2*m3*cos(2*z5 - 2*z7) - 54*m2^2*m3*cos(2*z5 - 2*z7) + 128*M*m1*m2 + 240*M*m1*m3 + 600*M*m2*m3 + 500*m1*m2*m3 - 120*m1*m2^2*cos(2*z3) - 48*m1^2*m2*cos(2*z3) - 72*m1*m3^2*cos(2*z3) - 90*m1^2*m3*cos(2*z3) + 24*m1*m2^2*cos(2*z5) - 48*m2*m3^2*cos(2*z3) - 150*m2^2*m3*cos(2*z3) + 24*m1*m3^2*cos(2*z5) + 27*m1^2*m3*cos(2*z3 - 2*z5 + 2*z7) + 27*m1^2*m3*cos(2*z3 + 2*z5 - 2*z7) + 27*m2^2*m3*cos(2*z3 - 2*z5 + 2*z7) + 27*m2^2*m3*cos(2*z3 + 2*z5 - 2*z7) - 144*M*m2^2*cos(2*z3 - 2*z5) - 144*M*m3^2*cos(2*z3 - 2*z5) - 180*m1*m2*m3*cos(2*z3 - 2*z5) + 36*m1*m2*m3*cos(2*z3 - 2*z7) - 180*m1*m2*m3*cos(2*z5 - 2*z7) - 300*m1*m2*m3*cos(2*z3) + 60*m1*m2*m3*cos(2*z5) - 12*m1*m2*m3*cos(2*z7) + 54*m1*m2*m3*cos(2*z3 - 2*z5 + 2*z7) + 54*m1*m2*m3*cos(2*z3 + 2*z5 - 2*z7) - 360*M*m2*m3*cos(2*z3 - 2*z5) + 72*M*m2*m3*cos(2*z3 - 2*z7) - 144*M*m1*m3*cos(2*z5 - 2*z7) - 216*M*m2*m3*cos(2*z5 - 2*z7));
	dz3 = z4;
	dz4 = -(24*(6*m2^2*u1*cos(z3 - 2*z5) - 6*m3^2*u1*cos(z3) - 4*g*m2^3*sin(z3) - 10*m2^2*u1*cos(z3) + 6*m3^2*u1*cos(z3 - 2*z5) - 6*M*g*m2^2*sin(z3 - 2*z5) - 6*M*g*m3^2*sin(z3 - 2*z5) - 3*g*m1*m2^2*sin(z3 - 2*z5) - 3*g*m1*m3^2*sin(z3 - 2*z5) + l2*m2^3*z6^2*sin(z3 + z5) - 8*m1*m2*u1*cos(z3) - 15*m1*m3*u1*cos(z3) - 25*m2*m3*u1*cos(z3) + l2*m2^3*z6^2*sin(z3 - z5) + (9*m1*m3*u1*cos(z3 - 2*z5 + 2*z7))/2 + (9*m1*m3*u1*cos(z3 + 2*z5 - 2*z7))/2 + (9*m2*m3*u1*cos(z3 - 2*z5 + 2*z7))/2 + (9*m2*m3*u1*cos(z3 + 2*z5 - 2*z7))/2 + 2*l1*m2^3*z4^2*sin(2*z3) + 15*m2*m3*u1*cos(z3 - 2*z5) - 3*m2*m3*u1*cos(z3 - 2*z7) - 10*M*g*m2^2*sin(z3) - 6*M*g*m3^2*sin(z3) - 15*g*m1*m2^2*sin(z3) - 8*g*m1^2*m2*sin(z3) - 9*g*m1*m3^2*sin(z3) - 15*g*m1^2*m3*sin(z3) - 4*g*m2*m3^2*sin(z3) - (25*g*m2^2*m3*sin(z3))/2 + (9*g*m1^2*m3*sin(z3 - 2*z5 + 2*z7))/2 + (9*g*m1^2*m3*sin(z3 + 2*z5 - 2*z7))/2 + (9*g*m2^2*m3*sin(z3 - 2*z5 + 2*z7))/4 + (9*g*m2^2*m3*sin(z3 + 2*z5 - 2*z7))/4 + 6*l2*m1*m2^2*z6^2*sin(z3 - z5) + 9*l2*m1*m3^2*z6^2*sin(z3 - z5) + 2*l2*m2*m3^2*z6^2*sin(z3 - z5) + (15*l2*m2^2*m3*z6^2*sin(z3 - z5))/4 + (9*l3*m1*m3^2*z8^2*sin(z3 - z7))/4 + (l3*m2*m3^2*z8^2*sin(z3 - z7))/4 - (l3*m2^2*m3*z8^2*sin(z3 - z7))/2 + (27*g*m1*m2*m3*sin(z3 - 2*z5 + 2*z7))/4 + (27*g*m1*m2*m3*sin(z3 + 2*z5 - 2*z7))/4 - 15*M*g*m2*m3*sin(z3 - 2*z5) + 3*M*g*m2*m3*sin(z3 - 2*z7) + 5*l1*m1*m2^2*z4^2*sin(2*z3) + 2*l1*m1^2*m2*z4^2*sin(2*z3) + 3*l1*m1*m3^2*z4^2*sin(2*z3) + (15*l1*m1^2*m3*z4^2*sin(2*z3))/4 + 2*l1*m2*m3^2*z4^2*sin(2*z3) + (25*l1*m2^2*m3*z4^2*sin(2*z3))/4 - (15*g*m1*m2*m3*sin(z3 - 2*z5))/2 + (3*g*m1*m2*m3*sin(z3 - 2*z7))/2 - (9*l1*m1^2*m3*z4^2*sin(2*z3 - 2*z5 + 2*z7))/8 - (9*l1*m1^2*m3*z4^2*sin(2*z3 + 2*z5 - 2*z7))/8 - (9*l1*m2^2*m3*z4^2*sin(2*z3 - 2*z5 + 2*z7))/8 - (9*l1*m2^2*m3*z4^2*sin(2*z3 + 2*z5 - 2*z7))/8 + 6*M*l1*m2^2*z4^2*sin(2*z3 - 2*z5) + 6*M*l1*m3^2*z4^2*sin(2*z3 - 2*z5) + 3*M*l3*m3^2*z8^2*sin(z3 - 2*z5 + z7) + 3*l1*m1*m2^2*z4^2*sin(2*z3 - 2*z5) + 3*l1*m1*m3^2*z4^2*sin(2*z3 - 2*z5) - (3*l2*m2^2*m3*z6^2*sin(z3 + z5 - 2*z7))/4 + (9*l3*m1*m3^2*z8^2*sin(z3 - 2*z5 + z7))/4 + (3*l3*m2*m3^2*z8^2*sin(z3 - 2*z5 + z7))/4 + (3*l3*m2^2*m3*z8^2*sin(z3 - 2*z5 + z7))/2 + 2*l2*m1*m2^2*z6^2*sin(z3 + z5) + 3*l2*m1*m3^2*z6^2*sin(z3 + z5) + 2*l2*m2*m3^2*z6^2*sin(z3 + z5) + (15*l2*m2^2*m3*z6^2*sin(z3 + z5))/4 + (3*l3*m1*m3^2*z8^2*sin(z3 + z7))/4 + (l3*m2*m3^2*z8^2*sin(z3 + z7))/4 - (l3*m2^2*m3*z8^2*sin(z3 + z7))/2 - 8*M*g*m1*m2*sin(z3) - 15*M*g*m1*m3*sin(z3) - 25*M*g*m2*m3*sin(z3) - (3*l2*m2^2*m3*z6^2*sin(z3 - z5 + 2*z7))/4 + (3*l3*m1*m3^2*z8^2*sin(z3 + 2*z5 - z7))/4 + (3*l3*m2*m3^2*z8^2*sin(z3 + 2*z5 - z7))/4 + (3*l3*m2^2*m3*z8^2*sin(z3 + 2*z5 - z7))/2 + 8*M*l2*m2^2*z6^2*sin(z3 - z5) + 12*M*l2*m3^2*z6^2*sin(z3 - z5) + 3*M*l3*m3^2*z8^2*sin(z3 - z7) + (9*M*g*m1*m3*sin(z3 - 2*z5 + 2*z7))/2 + (9*M*g*m1*m3*sin(z3 + 2*z5 - 2*z7))/2 + (9*M*g*m2*m3*sin(z3 - 2*z5 + 2*z7))/2 + (9*M*g*m2*m3*sin(z3 + 2*z5 - 2*z7))/2 - (75*g*m1*m2*m3*sin(z3))/2 + (75*l2*m1*m2*m3*z6^2*sin(z3 - z5))/4 + (3*l3*m1*m2*m3*z8^2*sin(z3 - z7))/2 + (25*l1*m1*m2*m3*z4^2*sin(2*z3))/2 - (9*l1*m1*m2*m3*z4^2*sin(2*z3 - 2*z5 + 2*z7))/4 - (9*l1*m1*m2*m3*z4^2*sin(2*z3 + 2*z5 - 2*z7))/4 + 15*M*l1*m2*m3*z4^2*sin(2*z3 - 2*z5) - 3*M*l1*m2*m3*z4^2*sin(2*z3 - 2*z7) - 3*M*l2*m2*m3*z6^2*sin(z3 + z5 - 2*z7) + 6*M*l3*m2*m3*z8^2*sin(z3 - 2*z5 + z7) + (15*l1*m1*m2*m3*z4^2*sin(2*z3 - 2*z5))/2 - (3*l1*m1*m2*m3*z4^2*sin(2*z3 - 2*z7))/2 - (9*l2*m1*m2*m3*z6^2*sin(z3 + z5 - 2*z7))/4 + (9*l3*m1*m2*m3*z8^2*sin(z3 - 2*z5 + z7))/2 + (25*l2*m1*m2*m3*z6^2*sin(z3 + z5))/4 + (l3*m1*m2*m3*z8^2*sin(z3 + z7))/2 - (3*l2*m1*m2*m3*z6^2*sin(z3 - z5 + 2*z7))/4 + (3*l3*m1*m2*m3*z8^2*sin(z3 + 2*z5 - z7))/2 + 25*M*l2*m2*m3*z6^2*sin(z3 - z5) + 2*M*l3*m2*m3*z8^2*sin(z3 - z7)))/(l1*(240*M*m2^2 - 48*m2^3*cos(2*z3) + 144*M*m3^2 + 200*m1*m2^2 + 80*m1^2*m2 + 120*m1*m3^2 + 150*m1^2*m3 + 48*m2*m3^2 + 150*m2^2*m3 + 48*m2^3 - 72*m1*m2^2*cos(2*z3 - 2*z5) - 72*m1*m3^2*cos(2*z3 - 2*z5) - 90*m1^2*m3*cos(2*z5 - 2*z7) - 54*m2^2*m3*cos(2*z5 - 2*z7) + 128*M*m1*m2 + 240*M*m1*m3 + 600*M*m2*m3 + 500*m1*m2*m3 - 120*m1*m2^2*cos(2*z3) - 48*m1^2*m2*cos(2*z3) - 72*m1*m3^2*cos(2*z3) - 90*m1^2*m3*cos(2*z3) + 24*m1*m2^2*cos(2*z5) - 48*m2*m3^2*cos(2*z3) - 150*m2^2*m3*cos(2*z3) + 24*m1*m3^2*cos(2*z5) + 27*m1^2*m3*cos(2*z3 - 2*z5 + 2*z7) + 27*m1^2*m3*cos(2*z3 + 2*z5 - 2*z7) + 27*m2^2*m3*cos(2*z3 - 2*z5 + 2*z7) + 27*m2^2*m3*cos(2*z3 + 2*z5 - 2*z7) - 144*M*m2^2*cos(2*z3 - 2*z5) - 144*M*m3^2*cos(2*z3 - 2*z5) - 180*m1*m2*m3*cos(2*z3 - 2*z5) + 36*m1*m2*m3*cos(2*z3 - 2*z7) - 180*m1*m2*m3*cos(2*z5 - 2*z7) - 300*m1*m2*m3*cos(2*z3) + 60*m1*m2*m3*cos(2*z5) - 12*m1*m2*m3*cos(2*z7) + 54*m1*m2*m3*cos(2*z3 - 2*z5 + 2*z7) + 54*m1*m2*m3*cos(2*z3 + 2*z5 - 2*z7) - 360*M*m2*m3*cos(2*z3 - 2*z5) + 72*M*m2*m3*cos(2*z3 - 2*z7) - 144*M*m1*m3*cos(2*z5 - 2*z7) - 216*M*m2*m3*cos(2*z5 - 2*z7)));
 	dz5 = z6;
 	dz6 = (24*(12*m2^2*u1*cos(z5) - 6*m3^2*u1*cos(2*z3 - z5) - 12*m2^2*u1*cos(2*z3 - z5) + 6*m3^2*u1*cos(z5) - 6*m1*m2*u1*cos(2*z3 - z5) - (15*m1*m3*u1*cos(2*z3 - z5))/2 - (45*m2*m3*u1*cos(2*z3 - z5))/2 - (3*g*m1^2*m3*sin(z5 - 2*z7))/4 - 12*M*g*m2^2*sin(2*z3 - z5) - 6*M*g*m3^2*sin(2*z3 - z5) - 6*g*m1*m2^2*sin(2*z3 - z5) - 3*g*m1^2*m2*sin(2*z3 - z5) - 3*g*m1*m3^2*sin(2*z3 - z5) - (15*g*m1^2*m3*sin(2*z3 - z5))/4 + 2*m1*m2*u1*cos(z5) + (5*m1*m3*u1*cos(z5))/2 + (45*m2*m3*u1*cos(z5))/2 + (9*m1*m3*u1*cos(2*z3 + z5 - 2*z7))/2 + (9*m2*m3*u1*cos(2*z3 + z5 - 2*z7))/2 - (3*m1*m3*u1*cos(z5 - 2*z7))/2 - (9*m2*m3*u1*cos(z5 - 2*z7))/2 + 12*M*g*m2^2*sin(z5) + 6*M*g*m3^2*sin(z5) + 2*g*m1*m2^2*sin(z5) - g*m1^2*m2*sin(z5) + g*m1*m3^2*sin(z5) - (5*g*m1^2*m3*sin(z5))/4 + (9*g*m1^2*m3*sin(2*z3 + z5 - 2*z7))/4 + 10*l1*m1*m2^2*z4^2*sin(z3 - z5) + 3*l1*m1^2*m2*z4^2*sin(z3 - z5) + 5*l1*m1*m3^2*z4^2*sin(z3 - z5) + (15*l1*m1^2*m3*z4^2*sin(z3 - z5))/4 - (5*l3*m1*m3^2*z8^2*sin(z5 - z7))/2 - 5*l3*m1^2*m3*z8^2*sin(z5 - z7) - (3*l3*m2*m3^2*z8^2*sin(z5 - z7))/2 - 6*l3*m2^2*m3*z8^2*sin(z5 - z7) + (9*g*m1*m2*m3*sin(2*z3 + z5 - 2*z7))/4 + (3*M*g*m1*m3*sin(z5 - 2*z7))/2 + (9*M*g*m2*m3*sin(z5 - 2*z7))/2 + l2*m1*m2^2*z6^2*sin(2*z5) + l2*m1*m3^2*z6^2*sin(2*z5) + (3*g*m1*m2*m3*sin(z5 - 2*z7))/4 - (9*l2*m1^2*m3*z6^2*sin(2*z3 - 2*z5 + 2*z7))/8 + (9*l2*m1^2*m3*z6^2*sin(2*z3 + 2*z5 - 2*z7))/8 - (9*l2*m2^2*m3*z6^2*sin(2*z3 - 2*z5 + 2*z7))/8 + (9*l2*m2^2*m3*z6^2*sin(2*z3 + 2*z5 - 2*z7))/8 + 6*M*l2*m2^2*z6^2*sin(2*z3 - 2*z5) + 6*M*l2*m3^2*z6^2*sin(2*z3 - 2*z5) - 3*M*l3*m3^2*z8^2*sin(z5 - 2*z3 + z7) + 3*l2*m1*m2^2*z6^2*sin(2*z3 - 2*z5) + 3*l2*m1*m3^2*z6^2*sin(2*z3 - 2*z5) - (15*l2*m1^2*m3*z6^2*sin(2*z5 - 2*z7))/4 - (9*l2*m2^2*m3*z6^2*sin(2*z5 - 2*z7))/4 - 6*M*g*m1*m2*sin(2*z3 - z5) - (15*M*g*m1*m3*sin(2*z3 - z5))/2 - (45*M*g*m2*m3*sin(2*z3 - z5))/2 - (9*l1*m1^2*m3*z4^2*sin(z3 + z5 - 2*z7))/4 - (3*l3*m1*m3^2*z8^2*sin(z5 - 2*z3 + z7))/2 - (45*g*m1*m2*m3*sin(2*z3 - z5))/4 + 2*l1*m1*m2^2*z4^2*sin(z3 + z5) + l1*m1^2*m2*z4^2*sin(z3 + z5) + l1*m1*m3^2*z4^2*sin(z3 + z5) + (5*l1*m1^2*m3*z4^2*sin(z3 + z5))/4 + (l3*m1*m3^2*z8^2*sin(z5 + z7))/2 + 2*M*g*m1*m2*sin(z5) + (5*M*g*m1*m3*sin(z5))/2 + (45*M*g*m2*m3*sin(z5))/2 - (3*l1*m1^2*m3*z4^2*sin(z3 - z5 + 2*z7))/4 + (3*l3*m1*m3^2*z8^2*sin(2*z3 + z5 - z7))/4 - (3*l3*m1*m3^2*z8^2*sin(2*z3 - z5 + z7))/4 + (3*l3*m1^2*m3*z8^2*sin(2*z3 + z5 - z7))/2 - (3*l3*m1^2*m3*z8^2*sin(2*z3 - z5 + z7))/2 + (3*l3*m2*m3^2*z8^2*sin(2*z3 + z5 - z7))/4 - (3*l3*m2*m3^2*z8^2*sin(2*z3 - z5 + z7))/4 + 3*l3*m2^2*m3*z8^2*sin(2*z3 + z5 - z7) - 3*l3*m2^2*m3*z8^2*sin(2*z3 - z5 + z7) + 24*M*l1*m2^2*z4^2*sin(z3 - z5) + 12*M*l1*m3^2*z4^2*sin(z3 - z5) - 3*M*l3*m3^2*z8^2*sin(z5 - z7) + (9*M*g*m1*m3*sin(2*z3 + z5 - 2*z7))/2 + (9*M*g*m2*m3*sin(2*z3 + z5 - 2*z7))/2 + (15*g*m1*m2*m3*sin(z5))/4 + (75*l1*m1*m2*m3*z4^2*sin(z3 - z5))/4 - 15*l3*m1*m2*m3*z8^2*sin(z5 - z7) + (5*l2*m1*m2*m3*z6^2*sin(2*z5))/2 - (9*l2*m1*m2*m3*z6^2*sin(2*z3 - 2*z5 + 2*z7))/4 + (9*l2*m1*m2*m3*z6^2*sin(2*z3 + 2*z5 - 2*z7))/4 + 15*M*l2*m2*m3*z6^2*sin(2*z3 - 2*z5) - 6*M*l2*m1*m3*z6^2*sin(2*z5 - 2*z7) - 9*M*l2*m2*m3*z6^2*sin(2*z5 - 2*z7) - 6*M*l1*m1*m3*z4^2*sin(z3 + z5 - 2*z7) - 9*M*l1*m2*m3*z4^2*sin(z3 + z5 - 2*z7) - 6*M*l3*m2*m3*z8^2*sin(z5 - 2*z3 + z7) + (15*l2*m1*m2*m3*z6^2*sin(2*z3 - 2*z5))/2 - (15*l2*m1*m2*m3*z6^2*sin(2*z5 - 2*z7))/2 - (15*l1*m1*m2*m3*z4^2*sin(z3 + z5 - 2*z7))/4 - 3*l3*m1*m2*m3*z8^2*sin(z5 - 2*z3 + z7) + (15*l1*m1*m2*m3*z4^2*sin(z3 + z5))/4 + l3*m1*m2*m3*z8^2*sin(z5 + z7) - (3*l1*m1*m2*m3*z4^2*sin(z3 - z5 + 2*z7))/4 + (9*l3*m1*m2*m3*z8^2*sin(2*z3 + z5 - z7))/2 - (9*l3*m1*m2*m3*z8^2*sin(2*z3 - z5 + z7))/2 + 8*M*l1*m1*m2*z4^2*sin(z3 - z5) + 10*M*l1*m1*m3*z4^2*sin(z3 - z5) + 45*M*l1*m2*m3*z4^2*sin(z3 - z5) - 8*M*l3*m1*m3*z8^2*sin(z5 - z7) - 18*M*l3*m2*m3*z8^2*sin(z5 - z7)))/(l2*(240*M*m2^2 - 48*m2^3*cos(2*z3) + 144*M*m3^2 + 200*m1*m2^2 + 80*m1^2*m2 + 120*m1*m3^2 + 150*m1^2*m3 + 48*m2*m3^2 + 150*m2^2*m3 + 48*m2^3 - 72*m1*m2^2*cos(2*z3 - 2*z5) - 72*m1*m3^2*cos(2*z3 - 2*z5) - 90*m1^2*m3*cos(2*z5 - 2*z7) - 54*m2^2*m3*cos(2*z5 - 2*z7) + 128*M*m1*m2 + 240*M*m1*m3 + 600*M*m2*m3 + 500*m1*m2*m3 - 120*m1*m2^2*cos(2*z3) - 48*m1^2*m2*cos(2*z3) - 72*m1*m3^2*cos(2*z3) - 90*m1^2*m3*cos(2*z3) + 24*m1*m2^2*cos(2*z5) - 48*m2*m3^2*cos(2*z3) - 150*m2^2*m3*cos(2*z3) + 24*m1*m3^2*cos(2*z5) + 27*m1^2*m3*cos(2*z3 - 2*z5 + 2*z7) + 27*m1^2*m3*cos(2*z3 + 2*z5 - 2*z7) + 27*m2^2*m3*cos(2*z3 - 2*z5 + 2*z7) + 27*m2^2*m3*cos(2*z3 + 2*z5 - 2*z7) - 144*M*m2^2*cos(2*z3 - 2*z5) - 144*M*m3^2*cos(2*z3 - 2*z5) - 180*m1*m2*m3*cos(2*z3 - 2*z5) + 36*m1*m2*m3*cos(2*z3 - 2*z7) - 180*m1*m2*m3*cos(2*z5 - 2*z7) - 300*m1*m2*m3*cos(2*z3) + 60*m1*m2*m3*cos(2*z5) - 12*m1*m2*m3*cos(2*z7) + 54*m1*m2*m3*cos(2*z3 - 2*z5 + 2*z7) + 54*m1*m2*m3*cos(2*z3 + 2*z5 - 2*z7) - 360*M*m2*m3*cos(2*z3 - 2*z5) + 72*M*m2*m3*cos(2*z3 - 2*z7) - 144*M*m1*m3*cos(2*z5 - 2*z7) - 216*M*m2*m3*cos(2*z5 - 2*z7)));
 	dz7 = z8;
 	dz8 = (36*m2^2*u1*cos(2*z3 - z7) - 108*m2^2*u1*cos(2*z5 - z7) - 36*m2^2*u1*cos(z7) + 108*m2^2*u1*cos(2*z3 - 2*z5 + z7) - 36*m1*m2*u1*cos(2*z3 - z7) - 216*m1*m3*u1*cos(2*z3 - z7) - 36*m1*m2*u1*cos(2*z5 - z7) - 72*m2*m3*u1*cos(2*z3 - z7) - 72*m1*m3*u1*cos(2*z5 - z7) - 216*m2*m3*u1*cos(2*z5 - z7) + 36*M*g*m2^2*sin(2*z3 - z7) - 108*M*g*m2^2*sin(2*z5 - z7) - 18*l2*m2^3*z6^2*sin(2*z3 + z5 - z7) + 18*l2*m2^3*z6^2*sin(2*z3 - z5 + z7) + 18*g*m1*m2^2*sin(2*z3 - z7) - 18*g*m1^2*m2*sin(2*z3 - z7) - 108*g*m1^2*m3*sin(2*z3 - z7) - 18*g*m1*m2^2*sin(2*z5 - z7) + 18*g*m1^2*m2*sin(2*z5 - z7) + 36*g*m1^2*m3*sin(2*z5 - z7) + 12*m1*m2*u1*cos(z7) + 72*m1*m3*u1*cos(z7) + 72*m2*m3*u1*cos(z7) + 36*l2*m2^3*z6^2*sin(z5 - z7) + 108*m1*m2*u1*cos(2*z3 - 2*z5 + z7) + 216*m1*m3*u1*cos(2*z3 - 2*z5 + z7) + 216*m2*m3*u1*cos(2*z3 - 2*z5 + z7) - 36*M*g*m2^2*sin(z7) + 108*M*g*m2^2*sin(2*z3 - 2*z5 + z7) - 6*g*m1*m2^2*sin(z7) - 6*g*m1^2*m2*sin(z7) - 36*g*m1^2*m3*sin(z7) + 54*g*m1*m2^2*sin(2*z3 - 2*z5 + z7) + 54*g*m1^2*m2*sin(2*z3 - 2*z5 + z7) + 108*g*m1^2*m3*sin(2*z3 - 2*z5 + z7) - 30*l1*m1*m2^2*z4^2*sin(z3 - z7) + 18*l1*m1^2*m2*z4^2*sin(z3 - z7) + 108*l1*m1^2*m3*z4^2*sin(z3 - z7) + 180*l2*m1*m2^2*z6^2*sin(z5 - z7) + 120*l2*m1^2*m2*z6^2*sin(z5 - z7) + 360*l2*m1^2*m3*z6^2*sin(z5 - z7) + 144*l2*m2^2*m3*z6^2*sin(z5 - z7) + 108*g*m1*m2*m3*sin(2*z3 - 2*z5 + z7) + 27*l3*m1^2*m3*z8^2*sin(2*z3 - 2*z5 + 2*z7) - 27*l3*m1^2*m3*z8^2*sin(2*z3 + 2*z5 - 2*z7) + 27*l3*m2^2*m3*z8^2*sin(2*z3 - 2*z5 + 2*z7) - 27*l3*m2^2*m3*z8^2*sin(2*z3 + 2*z5 - 2*z7) - 216*M*l1*m2^2*z4^2*sin(z3 - 2*z5 + z7) + 72*M*l2*m2^2*z6^2*sin(z5 - 2*z3 + z7) + 90*l3*m1^2*m3*z8^2*sin(2*z5 - 2*z7) + 54*l3*m2^2*m3*z8^2*sin(2*z5 - 2*z7) - 36*M*g*m1*m2*sin(2*z3 - z7) - 216*M*g*m1*m3*sin(2*z3 - z7) - 36*M*g*m1*m2*sin(2*z5 - z7) - 72*M*g*m2*m3*sin(2*z3 - z7) - 72*M*g*m1*m3*sin(2*z5 - z7) - 216*M*g*m2*m3*sin(2*z5 - z7) - 90*l1*m1*m2^2*z4^2*sin(z3 - 2*z5 + z7) - 54*l1*m1^2*m2*z4^2*sin(z3 - 2*z5 + z7) - 108*l1*m1^2*m3*z4^2*sin(z3 - 2*z5 + z7) + 36*l2*m1*m2^2*z6^2*sin(z5 - 2*z3 + z7) - 36*g*m1*m2*m3*sin(2*z3 - z7) - 36*g*m1*m2*m3*sin(2*z5 - z7) - 6*l1*m1*m2^2*z4^2*sin(z3 + z7) + 6*l1*m1^2*m2*z4^2*sin(z3 + z7) + 36*l1*m1^2*m3*z4^2*sin(z3 + z7) - 12*l2*m1*m2^2*z6^2*sin(z5 + z7) + 12*M*g*m1*m2*sin(z7) + 72*M*g*m1*m3*sin(z7) + 72*M*g*m2*m3*sin(z7) - 18*l1*m1*m2^2*z4^2*sin(z3 + 2*z5 - z7) - 18*l1*m1^2*m2*z4^2*sin(z3 + 2*z5 - z7) - 36*l1*m1^2*m3*z4^2*sin(z3 + 2*z5 - z7) - 54*l2*m1*m2^2*z6^2*sin(2*z3 + z5 - z7) + 54*l2*m1*m2^2*z6^2*sin(2*z3 - z5 + z7) - 36*l2*m1^2*m2*z6^2*sin(2*z3 + z5 - z7) + 36*l2*m1^2*m2*z6^2*sin(2*z3 - z5 + z7) - 108*l2*m1^2*m3*z6^2*sin(2*z3 + z5 - z7) + 108*l2*m1^2*m3*z6^2*sin(2*z3 - z5 + z7) - 72*l2*m2^2*m3*z6^2*sin(2*z3 + z5 - z7) + 72*l2*m2^2*m3*z6^2*sin(2*z3 - z5 + z7) - 72*M*l1*m2^2*z4^2*sin(z3 - z7) + 216*M*l2*m2^2*z6^2*sin(z5 - z7) + 108*M*g*m1*m2*sin(2*z3 - 2*z5 + z7) + 216*M*g*m1*m3*sin(2*z3 - 2*z5 + z7) + 216*M*g*m2*m3*sin(2*z3 - 2*z5 + z7) + 12*g*m1*m2*m3*sin(z7) + 60*l1*m1*m2*m3*z4^2*sin(z3 - z7) + 600*l2*m1*m2*m3*z6^2*sin(z5 - z7) - 12*l3*m1*m2*m3*z8^2*sin(2*z7) + 54*l3*m1*m2*m3*z8^2*sin(2*z3 - 2*z5 + 2*z7) - 54*l3*m1*m2*m3*z8^2*sin(2*z3 + 2*z5 - 2*z7) - 72*M*l3*m2*m3*z8^2*sin(2*z3 - 2*z7) + 144*M*l3*m1*m3*z8^2*sin(2*z5 - 2*z7) + 216*M*l3*m2*m3*z8^2*sin(2*z5 - 2*z7) - 144*M*l1*m1*m2*z4^2*sin(z3 - 2*z5 + z7) - 288*M*l1*m1*m3*z4^2*sin(z3 - 2*z5 + z7) - 432*M*l1*m2*m3*z4^2*sin(z3 - 2*z5 + z7) + 144*M*l2*m2*m3*z6^2*sin(z5 - 2*z3 + z7) - 36*l3*m1*m2*m3*z8^2*sin(2*z3 - 2*z7) + 180*l3*m1*m2*m3*z8^2*sin(2*z5 - 2*z7) - 180*l1*m1*m2*m3*z4^2*sin(z3 - 2*z5 + z7) + 72*l2*m1*m2*m3*z6^2*sin(z5 - 2*z3 + z7) + 12*l1*m1*m2*m3*z4^2*sin(z3 + z7) - 24*l2*m1*m2*m3*z6^2*sin(z5 + z7) - 36*l1*m1*m2*m3*z4^2*sin(z3 + 2*z5 - z7) - 180*l2*m1*m2*m3*z6^2*sin(2*z3 + z5 - z7) + 180*l2*m1*m2*m3*z6^2*sin(2*z3 - z5 + z7) + 48*M*l1*m1*m2*z4^2*sin(z3 - z7) + 288*M*l1*m1*m3*z4^2*sin(z3 - z7) + 144*M*l1*m2*m3*z4^2*sin(z3 - z7) + 192*M*l2*m1*m2*z6^2*sin(z5 - z7) + 576*M*l2*m1*m3*z6^2*sin(z5 - z7) + 720*M*l2*m2*m3*z6^2*sin(z5 - z7))/(l3*(240*M*m2^2 - 48*m2^3*cos(2*z3) + 144*M*m3^2 + 200*m1*m2^2 + 80*m1^2*m2 + 120*m1*m3^2 + 150*m1^2*m3 + 48*m2*m3^2 + 150*m2^2*m3 + 48*m2^3 - 72*m1*m2^2*cos(2*z3 - 2*z5) - 72*m1*m3^2*cos(2*z3 - 2*z5) - 90*m1^2*m3*cos(2*z5 - 2*z7) - 54*m2^2*m3*cos(2*z5 - 2*z7) + 128*M*m1*m2 + 240*M*m1*m3 + 600*M*m2*m3 + 500*m1*m2*m3 - 120*m1*m2^2*cos(2*z3) - 48*m1^2*m2*cos(2*z3) - 72*m1*m3^2*cos(2*z3) - 90*m1^2*m3*cos(2*z3) + 24*m1*m2^2*cos(2*z5) - 48*m2*m3^2*cos(2*z3) - 150*m2^2*m3*cos(2*z3) + 24*m1*m3^2*cos(2*z5) + 27*m1^2*m3*cos(2*z3 - 2*z5 + 2*z7) + 27*m1^2*m3*cos(2*z3 + 2*z5 - 2*z7) + 27*m2^2*m3*cos(2*z3 - 2*z5 + 2*z7) + 27*m2^2*m3*cos(2*z3 + 2*z5 - 2*z7) - 144*M*m2^2*cos(2*z3 - 2*z5) - 144*M*m3^2*cos(2*z3 - 2*z5) - 180*m1*m2*m3*cos(2*z3 - 2*z5) + 36*m1*m2*m3*cos(2*z3 - 2*z7) - 180*m1*m2*m3*cos(2*z5 - 2*z7) - 300*m1*m2*m3*cos(2*z3) + 60*m1*m2*m3*cos(2*z5) - 12*m1*m2*m3*cos(2*z7) + 54*m1*m2*m3*cos(2*z3 - 2*z5 + 2*z7) + 54*m1*m2*m3*cos(2*z3 + 2*z5 - 2*z7) - 360*M*m2*m3*cos(2*z3 - 2*z5) + 72*M*m2*m3*cos(2*z3 - 2*z7) - 144*M*m1*m3*cos(2*z5 - 2*z7) - 216*M*m2*m3*cos(2*z5 - 2*z7)));

 	dz = [dz1 dz2 dz3 dz4 dz5 dz6 dz7 dz8]';